#!/bin/bash -e

# Define the version
VERSION="v0.1.0"

# Function to display help
display_help() {
    echo "Usage: internsctl [OPTIONS] COMMAND [ARGS]"
    echo "Custom Linux command for internship operations."
    echo
    echo "Options:"
    echo "  --help     Display this help message"
    echo "  --version  Display the command version"
    echo
    echo "Commands:"
    echo "  cpu        Get CPU information"
    echo "  memory     Get memory information"
    echo "  user       Manage user operations"
    echo "  file       Get information about a file"
}

# Function to display version
display_version() {
    echo "internsctl $VERSION"
}

# Function to get CPU information
get_cpu_info() {
    lscpu
}

# Function to get memory information
get_memory_info() {
    free -h
}

# Function to create a new user
create_user() {
    if [ -z "$3" ]; then
        echo "Error: Missing username. Usage: internsctl user create <username>"
        exit 1
    fi
    
    username="$3"
    
    # Check if the provided username is 'create'
    if [ "$username" = "create" ]; then
        echo "Error: 'create' is a reserved keyword. Please choose a different username."
        exit 1
    fi
    
    sudo useradd -m -s /bin/bash "$username"
    sudo passwd "$username"
    echo "User '$username' created successfully."
}

# Function to list all users
list_users() {
    cut -d: -f1 /etc/passwd
}

# Function to list users with sudo permissions
list_sudo_users() {
    getent group sudo | cut -d: -f4 | tr ',' '\n'
}

# Function to get information about a file
get_file_info() {
    if [ -z "$3" ]; then
        echo "Error: Missing file name. Usage: internsctl file getinfo [options] $3"
        exit 1
    fi

    filename="$3"
    print_all=true  # Default: Print all information
    size=""
    permissions=""
    owner=""
    last_modified=""

    while [ "$#" -gt 3 ]; do
        case "$4" in
            --size | -s)
                size=$(stat -c %s "$filename")
                print_all=false
                ;;
            --permissions | -p)
                permissions=$(stat -c %A "$filename")
                print_all=false
                ;;
            --owner | -o)
                owner=$(stat -c %U "$filename")
                print_all=false
                ;;
            --last-modified | -m)
                last_modified=$(stat -c %y "$filename")
                print_all=false
                ;;
            *)
                echo "Error: Unknown option. Use 'internsctl file getinfo --help' for usage information."
                exit 1
                ;;
        esac
        shift
    done

    if [ "$print_all" = true ]; then
	permissions=$(stat -c %A "$filename")
        size=$(stat -c %s "$filename")
        owner=$(stat -c %U "$filename")
        last_modified=$(stat -c %y "$filename")
        echo "File: $filename"
        echo "Access: $permissions"
        echo "Size(B): $size"
        echo "Owner: $owner"
        echo "Modify: $last_modified"
    else
        # Print only the specified information
        [ -n "$size" ] && echo "Size(B): $size"
        [ -n "$permissions" ] && echo "Access: $permissions"
        [ -n "$owner" ] && echo "Owner: $owner"
        [ -n "$last_modified" ] && echo "Modify: $last_modified"
    fi

}

# Main script logic
if [ "$#" -eq 0 ]; then
    display_help
    exit 1
fi

case "$1" in
    --help)
        display_help
        ;;
    --version)
        display_version
        ;;
    cpu)
        get_cpu_info
        ;;
    memory)
        get_memory_info
        ;;
    user)
        case "$2" in
            create)
                create_user "$@"
                ;;
            delete)
                delete_user "$@"
                ;;
            list)
                if [ "$3" = "--sudo-only" ]; then
                    list_sudo_users
                else
                    list_users
                fi
                ;;
            *)
                echo "Error: Unknown user command. Use 'internsctl user --help' for usage information."
                exit 1
                ;;
        esac
        ;;
    file)
        case "$2" in
            getinfo)
                get_file_info "$@"
                ;;
            *)
                echo "Error: Unknown file command. Use 'internsctl file --help' for usage information."
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Error: Unknown command. Use 'internsctl --help' for usage information."
        exit 1
        ;;
esac

exit 0
